<!DOCTYPE html>
<html lang="en">

<head>
    <title>3D Shoulder Bone</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
    <Link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body>

    <div class="container">
        <div class="header">
            3d model
        </div>
        <div class="fl-box">
            <div class="canva" id="canva">
                <script src="http://threejs.org/build/three.min.js"></script>
    
                <script src="http://threejs.org/examples/js/loaders/STLLoader.js"></script>
    
                <script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
                <canvas id="model">
    
                </canvas>
    
    
    
            </div>
            <div class="content">
                Lorem Ipsum<br>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et
                dolore magna aliqua.
                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est
                laborum.
            </div>
        </div>
        
        <div class="footer">

        </div>
    </div>





















    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        var renderer, mesh;
        const scene = new THREE.Scene();
        //scene.background = new THREE.Color(0xcfcfcc)

        //const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 2000);
        const camera = new THREE.PerspectiveCamera(50, document.getElementById('canva').clientWidth / document.getElementById('canva').clientHeight, 0.1, 2000);
        camera.position.set(0, 0, -300);
        //camera.position.set(0,0,-70)


        renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('model') });
        //renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.setSize(document.getElementById('canva').clientWidth, document.getElementById('canva').clientHeight);
        //var container = document.getElementById("model"); //1
        //document.body.appendChild(container);
        //container.appendChild(renderer.domElement);




        //document.body.appendChild(renderer.domElement);

        window.addEventListener('resize', function () {
            var width = window.innerWidth;
            var height = window.innerHeight;
            renderer.setSize(width, height);
            camera.aspect = width / height;
            camera.updateProjectionMatrix;
        })

        const controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.minDistance = 200
        controls.maxDistance = 350
        controls.update();

        //const geometry = new THREE.BoxGeometry();
        //const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
        //const cube = new THREE.Mesh(geometry, material);
        //scene.add(cube);

        const alight = new THREE.AmbientLight(0xe3dac9); // soft white light
        scene.add(alight);


        var light = new THREE.PointLight(0xf5c693, 0.8);
        light.position.set(0, 0, -70)
        scene.add(light)

        var loader = new THREE.STLLoader();
        loader.load('/Shoulder_Bone.stl', function (geometry) {
            var material = new THREE.MeshPhongMaterial({ color: 0xe3dac9 });

            mesh = new THREE.Mesh(geometry, material);
            mesh.position.set(50, -70, 750)
            //mesh.position.set(50,-70,600)
            scene.add(mesh);

        });

        const axesHelper = new THREE.AxesHelper(50);
        scene.add(axesHelper);

        function animate() {
            requestAnimationFrame(animate);



            renderer.render(scene, camera);
            controls.update();

        }
        animate();
    </script>


</body>

</html>